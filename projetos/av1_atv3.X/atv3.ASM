;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*              MODIFICAÇÕES PARA USO COM 12F675                   *
;*                FEITAS PELO PROF. MARDSON                        *
;*                    FEVEREIRO DE 2016                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       NOME DO PROJETO                           *
;*                           CLIENTE                               *
;*         DESENVOLVIDO PELA MOSAICO ENGENHARIA E CONSULTORIA      *
;*   VERSÃO: 1.0                           DATA: 17/06/03          *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     DESCRIÇÃO DO ARQUIVO                        *
;*-----------------------------------------------------------------*
;*   MODELO PARA O PIC 12F675                                      *
;*                                                                 *
;*                                                                 *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ARQUIVOS DE DEFINIÇÕES                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#INCLUDE <p12f675.inc>	;ARQUIVO PADRÃO MICROCHIP PARA 12F675

	__CONFIG _BODEN_OFF & _CP_OFF & _PWRTE_ON & _WDT_OFF & _MCLRE_ON & _INTRC_OSC_NOCLKOUT

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    PAGINAÇÃO DE MEMÓRIA                         *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;DEFINIÇÃO DE COMANDOS DE USUÁRIO PARA ALTERAÇÃO DA PÁGINA DE MEMÓRIA
#DEFINE	BANK0	BCF STATUS,RP0	;SETA BANK 0 DE MEMÓRIA
#DEFINE	BANK1	BSF STATUS,RP0	;SETA BANK 1 DE MAMÓRIA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         VARIÁVEIS                               *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DOS NOMES E ENDEREÇOS DE TODAS AS VARIÁVEIS UTILIZADAS 
; PELO SISTEMA

	CBLOCK	0x20	;ENDEREÇO INICIAL DA MEMÓRIA DE
					;USUÁRIO
		W_TEMP		;REGISTRADORES TEMPORÁRIOS PARA USO
		STATUS_TEMP	;JUNTO ÀS INTERRUPÇÕES

		;NOVAS VARIÁVEIS
		CNTRL_NOTES	;REGISTRADOR RESPONSÁVEL PELO CONTROLE DA NOTA QUE DEVERÁ SER TOCADA

	ENDC			;FIM DO BLOCO DE MEMÓRIA
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                        FLAGS INTERNOS                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS FLAGS UTILIZADOS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         CONSTANTES                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODAS AS CONSTANTES UTILIZADAS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           ENTRADAS                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO ENTRADA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           SAÍDAS                                *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO SAÍDA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       VETOR DE RESET                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	ORG	0x00			;ENDEREÇO INICIAL DE PROCESSAMENTO
	GOTO	INICIO
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    INÍCIO DA INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ENDEREÇO DE DESVIO DAS INTERRUPÇÕES. A PRIMEIRA TAREFA É SALVAR OS
; VALORES DE "W" E "STATUS" PARA RECUPERAÇÃO FUTURA

	ORG	0x04			;ENDEREÇO INICIAL DA INTERRUPÇÃO
	MOVWF	W_TEMP		;COPIA W PARA W_TEMP
	SWAPF	STATUS,W
	MOVWF	STATUS_TEMP	;COPIA STATUS PARA STATUS_TEMP

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    ROTINA DE INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; AQUI SERÁ ESCRITA AS ROTINAS DE RECONHECIMENTO E TRATAMENTO DAS
; INTERRUPÇÕES
	

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                 ROTINA DE SAÍDA DA INTERRUPÇÃO                  *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; OS VALORES DE "W" E "STATUS" DEVEM SER RECUPERADOS ANTES DE 
; RETORNAR DA INTERRUPÇÃO

SAI_INT
	SWAPF	STATUS_TEMP,W
	MOVWF	STATUS		;MOVE STATUS_TEMP PARA STATUS
	SWAPF	W_TEMP,F
	SWAPF	W_TEMP,W	;MOVE W_TEMP PARA W
	RETFIE

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*	            	 ROTINAS E SUBROTINAS                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; CADA ROTINA OU SUBROTINA DEVE POSSUIR A DESCRIÇÃO DE FUNCIONAMENTO
; E UM NOME COERENTE ÀS SUAS FUNÇÕES.

SUBROTINA1

	;CORPO DA ROTINA

	RETURN

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIO DO PROGRAMA                          *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
INICIO
	BANK1				;ALTERA PARA O BANCO 1
	MOVLW	B'00000001' ;CONFIGURA TODAS AS PORTAS DO GPIO (PINOS)
	MOVWF	TRISIO		;COMO SAÍDAS TIRANDO A GP0
	CLRF	ANSEL 		;DEFINE PORTAS COMO Digital I/O
	MOVLW	B'00000011'
	MOVWF	OPTION_REG	;DEFINE OPÇÕES DE OPERAÇÃO [TMR0 -> 1:16]
	MOVLW	B'00000000'
	MOVWF	INTCON		;DEFINE OPÇÕES DE INTERRUPÇÕES [DESTATIVA AS OPÇÃO DE INTERRUPÇÃO DO PARA TMR0 E TMR1]

	BANK0				;RETORNA PARA O BANCO
	MOVLW	B'00110001'	;CONFIGURA O TM1, PRATICAMENTE O HABILITA E COLOCA O PRESCALE 1:8
	MOVWF	T1CON
	MOVLW	B'00000111'
	MOVWF	CMCON		;DEFINE O MODO DE OPERAÇÃO DO COMPARADOR ANALÓGICO

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIALIZAÇÃO DAS VARIÁVEIS                 *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
	MOVLW	B'00000001'	;CONFIGURAÇÃO DO CONTROLE DE NOTAS. O BIT INDICARA QUAL DEVERÁ SER TOCADA, DA DIREITA PARA ESQUEDA, DO~SI
	MOVWF	CNTRL_NOTES

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ROTINA PRINCIPAL                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
MAIN

	;TESTA O SE O GP0 ESTA ATIVO OU NÃO, CASO ESTEJA, EXECUTA AS INTRUÇÕES PARA RESETAR AS CONGIRUAÇÕES
	;SE O GP0 FOR BAIXO, ENTÃO EXECUTA AS INSTRUÇÕES PARA TOCAR A ESCALA.
	;ESSAS INSTRUÇÕES SÃO EXECUTADAS NO MÁXIMO DEPIOS DE CADA NOTA.
	BTFSC	GPIO, GP0
	GOTO	GP0H_GP5L
	GOTO	PLAY_SCALE
	
	

	GOTO	MAIN
	
;INSTRUÇÕES NECESSÁRIAS PARA "RESETAR" AS CONFIGURAÇÕES
;COLOCA O GP5 PARA NÍVEL BAIXO, RECONFIGURA O REGISTRADOR DO CONTROLE DAS NOTAS
;E RETORNA PARA MAIN
GP0H_GP5L
	BCF	GPIO, GP5
	MOVLW	B'00000001'	;CONFIGURAÇÃO DO CONTROLE DE NOTAS. O BIT INDICARA QUAL DEVERÁ SER TOCADA, DA DIREITA PARA ESQUEDA, DO~SI
	MOVWF	CNTRL_NOTES
	GOTO	MAIN
	

;AS INSTRUÇÕES ABAIXO SÃO EXECUTADAS A PARTIR DO REGISTRADOR DE CONTROLE DE NOTAS 
;SE O REGISTRADOR TIVER O BIT "0" EM VALOR 1, A NOTA DÓ É TOCADA E ASSIM ACONTECE PARA TODAS AS OUTRAS
;O ÚTLIMO BIT VAI INDICAR QUE A SEQUENCIA ACABOU E CHAMA A PARTE ONDE É RESETADA AS CONFIGURAÇÕES 
;E RECOMEÇARÁ O LOOP DE NOTAS NOVAMENTE.
PLAY_SCALE
	BTFSC	CNTRL_NOTES, 0 ;TOCA A NOTA DÓ
	GOTO	DO
	BTFSC	CNTRL_NOTES, 1 ;TOCA A NOTA RÉ
	GOTO	RE
	BTFSC	CNTRL_NOTES, 2 ;TOCA A NOTA MI
	GOTO	MI
	BTFSC	CNTRL_NOTES, 3 ;TOCA A NOTA FÁ
	GOTO	FA
	BTFSC	CNTRL_NOTES, 4 ;TOCA A NOTA SOL
	GOTO	SOL
	BTFSC	CNTRL_NOTES, 5 ;TOCA A NOTA LÁ
	GOTO	LA
	BTFSC	CNTRL_NOTES, 6 ;TOCA A NOTA SI
	GOTO	SI
	GOTO	GP0H_GP5L ;AO FIM, SE NÃO SATISFAZER, RESETA TUDO
	GOTO	MAIN

;NOTA DÓ 
DO	
	;DESCOLA O BIT PARA ESQUERDA, SINALIZANDO QUE A PRÓXIMA NOTA PODE SER TOCADA.
	RLF	CNTRL_NOTES
	
	;1011 11100101 = 3045
	MOVLW	B'00001011'	;CONFIGURA O TMR1 PARA CONTAR 500 MS.
	MOVWF	TMR1H
	MOVLW	B'11100101'
	MOVWF	TMR1L
	BCF	PIR1, TMR1IF	;RESET DA FLAG DE ESTOURO DO TMR1
	
	MOVLW	D'139' ;CONFIGURA TMR0 PARA A NOTA CONRRESPONTE, NO CASO A DÓ
	MOVWF	TMR0
	BCF	INTCON, T0IF
	
	LOOP_NOTE_DO
	    BTFSC   PIR1, TMR1IF    ;TESTE DO ESTOURO DO TEMPO DE 500 MS
	    GOTO    MAIN	    ;CASO TENHA ESTOURADO, VOLTA PRA MAIN PARA VERIFICAR SE O GP0 AINDA É 0 E CHAMAR A PRÓXIMA NOTA
	    BTFSC   INTCON, T0IF    ;VERIFICA O TEMPO PARA OSCILAR O GP5, SE ESTOURAR, DEVE MUDAR PRA 1 OU 0, DEPENDENDO DO GP5. CASO NÃO ESTOURE, SEGURA O VALOR ATUAL
	    GOTO    HI_LO_DO
	    GOTO    LOOP_NOTE_DO
	
	GOTO	MAIN
	
;AS INSTRUÇÕES ABAIXO AJUDASTA O GP5 PRA 0 OU 1, DEPENDENDO DO SEU ESTADO ANTERIOR.	
HI_LO_DO	
	MOVLW	D'137' ;CONFIGURA TMR0 PARA A NOTA CONRRESPONTE
	MOVWF	TMR0
	BCF	INTCON, T0IF
	
	BTFSC	GPIO, GP5   ;TESTE DO GP5, CASO SEJA 1, CHAMA DO GOTO LO_X PARA ZERAR, SE NÃO, SETA GP5 PARA 1 E VOLTA	
	GOTO	LO_DO
	BSF	GPIO, GP5 	
	GOTO	LOOP_NOTE_DO
LO_DO
	BCF	GPIO, GP5
	GOTO	LOOP_NOTE_DO
	
;NOTA RE 	
RE
	;DESCOLA O BIT PARA ESQUERDA, SINALIZANDO QUE A PRÓXIMA NOTA PODE SER TOCADA.
	RLF	CNTRL_NOTES	
	
	;1011 11001100 = 3020
	MOVLW	B'00001011'	;CONFIGURA O TMR1 PARA CONTAR 500 MS.
	MOVWF	TMR1H
	MOVLW	B'11100000'
	MOVWF	TMR1L
	BCF	PIR1, TMR1IF	;RESET DA FLAG DE ESTOURO DO TMR1
	
	MOVLW	D'152' ;CONFIGURA TMR0 PARA A NOTA CONRRESPONTE, NO CASO A RÉ
	MOVWF	TMR0
	BCF	INTCON, T0IF
	
	LOOP_NOTE_RE
	    BTFSC   PIR1, TMR1IF    ;TESTE DO ESTOURO DO TEMPO DE 500 MS
	    GOTO    MAIN	    ;CASO TENHA ESTOURADO, VOLTA PRA MAIN PARA VERIFICAR SE O GP0 AINDA É 0 E CHAMAR A PRÓXIMA NOTA
	    BTFSC   INTCON, T0IF    ;VERIFICA O TEMPO PARA OSCILAR O GP5, SE ESTOURAR, DEVE MUDAR PRA 1 OU 0, DEPENDENDO DO GP5. CASO NÃO ESTOURE, SEGURA O VALOR ATUAL
	    GOTO    HI_LO_RE
	    GOTO    LOOP_NOTE_RE
	    
	GOTO	MAIN

;AS INSTRUÇÕES ABAIXO AJUDASTA O GP5 PRA 0 OU 1, DEPENDENDO DO SEU ESTADO ANTERIOR.
HI_LO_RE	
	MOVLW	D'150' ;CONFIGURA TMR0 PARA A NOTA CONRRESPONTE
	MOVWF	TMR0
	BCF	INTCON, T0IF
	
	BTFSC	GPIO, GP5   ;TESTE DO GP5, CASO SEJA 1, CHAMA DO GOTO LO_X PARA ZERAR, SE NÃO, SETA GP5 PARA 1 E VOLTA
	GOTO	LO_RE
	BSF	GPIO, GP5 	
	GOTO	LOOP_NOTE_RE
LO_RE
	BCF	GPIO, GP5
	GOTO	LOOP_NOTE_RE
	
;NOTA MI 
MI
	;DESCOLA O BIT PARA ESQUERDA, SINALIZANDO QUE A PRÓXIMA NOTA PODE SER TOCADA.
	RLF	CNTRL_NOTES	
	
	;101111100000 = 3040
	MOVLW	B'00001011'	;CONFIGURA O TMR1 PARA CONTAR 500 MS.
	MOVWF	TMR1H
	MOVLW	B'11100000'
	MOVWF	TMR1L
	BCF	PIR1, TMR1IF	;RESET DA FLAG DE ESTOURO DO TMR1
	
	MOVLW	D'164' ;CONFIGURA TMR0 PARA A NOTA CONRRESPONTE, NO CASO A MI
	MOVWF	TMR0
	BCF	INTCON, T0IF
	
	LOOP_NOTE_MI
	    BTFSC   PIR1, TMR1IF    ;TESTE DO ESTOURO DO TEMPO DE 500 MS
	    GOTO    MAIN	    ;CASO TENHA ESTOURADO, VOLTA PRA MAIN PARA VERIFICAR SE O GP0 AINDA É 0 E CHAMAR A PRÓXIMA NOTA
	    BTFSC   INTCON, T0IF    ;VERIFICA O TEMPO PARA OSCILAR O GP5, SE ESTOURAR, DEVE MUDAR PRA 1 OU 0, DEPENDENDO DO GP5. CASO NÃO ESTOURE, SEGURA O VALOR ATUAL
	    GOTO    HI_LO_MI
	    GOTO    LOOP_NOTE_MI
	    
	GOTO	MAIN

;AS INSTRUÇÕES ABAIXO AJUDASTA O GP5 PRA 0 OU 1, DEPENDENDO DO SEU ESTADO ANTERIOR.
HI_LO_MI	
	MOVLW	D'162' ;CONFIGURA TMR0 PARA A NOTA CONRRESPONTE
	MOVWF	TMR0
	BCF	INTCON, T0IF
	
	BTFSC	GPIO, GP5   ;TESTE DO GP5, CASO SEJA 1, CHAMA DO GOTO LO_X PARA ZERAR, SE NÃO, SETA GP5 PARA 1 E VOLTA
	GOTO	LO_MI
	BSF	GPIO, GP5 	
	GOTO	LOOP_NOTE_MI
LO_MI
	BCF	GPIO, GP5
	GOTO	LOOP_NOTE_MI
	

;NOTA FA 
FA
	;DESCOLA O BIT PARA ESQUERDA, SINALIZANDO QUE A PRÓXIMA NOTA PODE SER TOCADA.
	RLF	CNTRL_NOTES
	
	;101111100000 = 3040
	MOVLW	B'00001011'	;CONFIGURA O TMR1 PARA CONTAR 500 MS.
	MOVWF	TMR1H
	MOVLW	B'11100000'
	MOVWF	TMR1L
	BCF	PIR1, TMR1IF	;RESET DA FLAG DE ESTOURO DO TMR1
	
	MOVLW	D'168' ;CONFIGURA TMR0 PARA A NOTA CONRRESPONTE, NO CASO A FÁ
	MOVWF	TMR0
	BCF	INTCON, T0IF
	
	LOOP_NOTE_FA
	    BTFSC   PIR1, TMR1IF    ;TESTE DO ESTOURO DO TEMPO DE 500 MS
	    GOTO    MAIN	    ;CASO TENHA ESTOURADO, VOLTA PRA MAIN PARA VERIFICAR SE O GP0 AINDA É 0 E CHAMAR A PRÓXIMA NOTA
	    BTFSC   INTCON, T0IF    ;VERIFICA O TEMPO PARA OSCILAR O GP5, SE ESTOURAR, DEVE MUDAR PRA 1 OU 0, DEPENDENDO DO GP5. CASO NÃO ESTOURE, SEGURA O VALOR ATUAL
	    GOTO    HI_LO_FA
	    GOTO    LOOP_NOTE_FA
	    
	GOTO	MAIN
	
;AS INSTRUÇÕES ABAIXO AJUDASTA O GP5 PRA 0 OU 1, DEPENDENDO DO SEU ESTADO ANTERIOR.
HI_LO_FA	
	MOVLW	D'167' ;CONFIGURA TMR0 PARA A NOTA CONRRESPONTE
	MOVWF	TMR0
	BCF	INTCON, T0IF
	
	BTFSC	GPIO, GP5   ;TESTE DO GP5, CASO SEJA 1, CHAMA DO GOTO LO_X PARA ZERAR, SE NÃO, SETA GP5 PARA 1 E VOLTA
	GOTO	LO_FA
	BSF	GPIO, GP5 	
	GOTO	LOOP_NOTE_FA
LO_FA
	BCF	GPIO, GP5
	GOTO	LOOP_NOTE_FA
	
;NOTA SOL	
SOL
	;DESCOLA O BIT PARA ESQUERDA, SINALIZANDO QUE A PRÓXIMA NOTA PODE SER TOCADA.
	RLF	CNTRL_NOTES
	
	;101110111000 = 3000
	MOVLW	B'00001011'	;CONFIGURA O TMR1 PARA CONTAR 500 MS.
	MOVWF	TMR1H
	MOVLW	B'10111000'
	MOVWF	TMR1L
	BCF	PIR1, TMR1IF	;RESET DA FLAG DE ESTOURO DO TMR1
	
	MOVLW	D'179' ;CONFIGURA TMR0 PARA A NOTA CONRRESPONTE, NO CASO A SOL
	MOVWF	TMR0
	BCF	INTCON, T0IF
	
	LOOP_NOTE_SOL
	    BTFSC   PIR1, TMR1IF    ;TESTE DO ESTOURO DO TEMPO DE 500 MS
	    GOTO    MAIN	    ;CASO TENHA ESTOURADO, VOLTA PRA MAIN PARA VERIFICAR SE O GP0 AINDA É 0 E CHAMAR A PRÓXIMA NOTA
	    BTFSC   INTCON, T0IF    ;VERIFICA O TEMPO PARA OSCILAR O GP5, SE ESTOURAR, DEVE MUDAR PRA 1 OU 0, DEPENDENDO DO GP5. CASO NÃO ESTOURE, SEGURA O VALOR ATUAL
	    GOTO    HI_LO_SOL
	    GOTO    LOOP_NOTE_SOL
	    
	GOTO	MAIN
	
;AS INSTRUÇÕES ABAIXO AJUDASTA O GP5 PRA 0 OU 1, DEPENDENDO DO SEU ESTADO ANTERIOR.
HI_LO_SOL
	MOVLW	D'177' ;CONFIGURA TMR0 PARA A NOTA CONRRESPONTE
	MOVWF	TMR0
	BCF	INTCON, T0IF
	
	BTFSC	GPIO, GP5   ;TESTE DO GP5, CASO SEJA 1, CHAMA DO GOTO LO_X PARA ZERAR, SE NÃO, SETA GP5 PARA 1 E VOLTA
	GOTO	LO_SOL
	BSF	GPIO, GP5 	
	GOTO	LOOP_NOTE_SOL
LO_SOL
	BCF	GPIO, GP5
	GOTO	LOOP_NOTE_SOL
	
;NOTA LA
LA
	;DESCOLA O BIT PARA ESQUERDA, SINALIZANDO QUE A PRÓXIMA NOTA PODE SER TOCADA.
	RLF	CNTRL_NOTES
	
	;1011 11100000 = 3040
	MOVLW	B'00001011'	;CONFIGURA O TMR1 PARA CONTAR 500 MS.
	MOVWF	TMR1H
	MOVLW	B'11100000'
	MOVWF	TMR1L
	BCF	PIR1, TMR1IF	;RESET DA FLAG DE ESTOURO DO TMR1
	
	MOVLW	D'188' ;CONFIGURA TMR0 PARA A NOTA CONRRESPONTE, NO CASO A LÁ
	MOVWF	TMR0
	BCF	INTCON, T0IF
	
	LOOP_NOTE_LA
	    BTFSC   PIR1, TMR1IF    ;TESTE DO ESTOURO DO TEMPO DE 500 MS
	    GOTO    MAIN	    ;CASO TENHA ESTOURADO, VOLTA PRA MAIN PARA VERIFICAR SE O GP0 AINDA É 0 E CHAMAR A PRÓXIMA NOTA
	    BTFSC   INTCON, T0IF    ;VERIFICA O TEMPO PARA OSCILAR O GP5, SE ESTOURAR, DEVE MUDAR PRA 1 OU 0, DEPENDENDO DO GP5. CASO NÃO ESTOURE, SEGURA O VALOR ATUAL
	    GOTO    HI_LO_LA
	    GOTO    LOOP_NOTE_LA
	    
	GOTO	MAIN
	
;AS INSTRUÇÕES ABAIXO AJUDASTA O GP5 PRA 0 OU 1, DEPENDENDO DO SEU ESTADO ANTERIOR.
HI_LO_LA	
	MOVLW	D'186' ;CONFIGURA TMR0 PARA A NOTA CONRRESPONTE
	MOVWF	TMR0
	BCF	INTCON, T0IF
	
	BTFSC	GPIO, GP5   ;TESTE DO GP5, CASO SEJA 1, CHAMA DO GOTO LO_X PARA ZERAR, SE NÃO, SETA GP5 PARA 1 E VOLTA
	GOTO	LO_LA
	BSF	GPIO, GP5 	
	GOTO	LOOP_NOTE_LA
LO_LA
	BCF	GPIO, GP5
	GOTO	LOOP_NOTE_LA
	
;NOTA SI	
SI
	;DESCOLA O BIT PARA ESQUERDA, SINALIZANDO QUE A PRÓXIMA NOTA PODE SER TOCADA.
	RLF	CNTRL_NOTES
	
	;1011 11100000 = 3040
	MOVLW	B'00001011'	;CONFIGURA O TMR1 PARA CONTAR 500 MS.
	MOVWF	TMR1H
	MOVLW	B'11100000'
	MOVWF	TMR1L
	BCF	PIR1, TMR1IF	;RESET DA FLAG DE ESTOURO DO TMR1
	
	MOVLW	D'195' ;CONFIGURA TMR0 PARA A NOTA CONRRESPONTE, NO CASO A SÍ
	MOVWF	TMR0
	BCF	INTCON, T0IF
	
	LOOP_NOTE_SI
	    BTFSC   PIR1, TMR1IF    ;TESTE DO ESTOURO DO TEMPO DE 500 MS
	    GOTO    MAIN	    ;CASO TENHA ESTOURADO, VOLTA PRA MAIN PARA VERIFICAR SE O GP0 AINDA É 0 E CHAMAR A PRÓXIMA NOTA
	    BTFSC   INTCON, T0IF    ;VERIFICA O TEMPO PARA OSCILAR O GP5, SE ESTOURAR, DEVE MUDAR PRA 1 OU 0, DEPENDENDO DO GP5. CASO NÃO ESTOURE, SEGURA O VALOR ATUAL
	    GOTO    HI_LO_SI
	    GOTO    LOOP_NOTE_SI
	    
	GOTO	MAIN

;AS INSTRUÇÕES ABAIXO AJUDASTA O GP5 PRA 0 OU 1, DEPENDENDO DO SEU ESTADO ANTERIOR.
HI_LO_SI	
	MOVLW	D'193' ;CONFIGURA TMR0 PARA A NOTA CONRRESPONTE
	MOVWF	TMR0
	BCF	INTCON, T0IF
	
	BTFSC	GPIO, GP5   ;TESTE DO GP5, CASO SEJA 1, CHAMA DO GOTO LO_X PARA ZERAR, SE NÃO, SETA GP5 PARA 1 E VOLTA
	GOTO	LO_SI
	BSF	GPIO, GP5 	
	GOTO	LOOP_NOTE_SI
LO_SI
	BCF	GPIO, GP5
	GOTO	LOOP_NOTE_SI

	

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       FIM DO PROGRAMA                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	END
